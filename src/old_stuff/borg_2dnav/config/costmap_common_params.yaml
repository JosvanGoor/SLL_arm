
robot_base_frame: base_footprint
map_type: costmap
#Voxel grid specific parameters
#origin_z: 0.0
#z_resolution: 0.2
#z_voxels: 10
#unknown_threshold: 9
#mark_threshold: 0
#Set the tolerance we're willing to have for tf transforms
transform_tolerance: 0.3
#Obstacle marking parameters
obstacle_range: 4
max_obstacle_height: 1.7
raytrace_range: 4.5
#The footprint of the robot and associated padding
#Cost function parameters
#cost_scaling_factor: 10.0
#The cost at which a cell is considered an obstacle when a map is read from the map_server
#lethal_cost_threshold: 100

#robot_radius: 0.35
#footprint: [ [0.313, -0.18], [0.313, 0.18], [0.18, 0.2525], [-0.18, 0.2525], [-0.313, 0.18], [-0.313, -0.18], [-0.18, -0.2525], [0.18, -0.2525] ]
footprint: [ [0.23, -0.19], [0.23, 0.19], [-0.34, 0.21], [-0.34, -0.23] ]
#footprint: [ [0.15, -0.25], [0.25, -0.195], [0.30, -0.1], [0.31, 0], [0.30, 0.1], [0.25, 0.195],  [0.15, 0.25], [-0.15, 0.25], [-0.25, 0.195], [-0.30, 0.1], [-0.31, 0], [-0.30, -0.1], [-0.25, -0.195], [-0.15, -0.25] ]
#footprint: [[-0.27, -0.25], [-0.27, 0.2], [0.27, 0.25], [0.27, -0.25]] # x: 57 cm, y: 40 cm

inflation_radius: 0.4

point_cloud_sensor: {sensor_frame: camera_link, data_type: PointCloud2, min_obstacle_height: 0.15, topic: voxel_grid/output, marking: true, clearing: false, expected_update_rate: 0.3}
point_cloud_sensor2: {sensor_frame: camera_link, data_type: PointCloud2, min_obstacle_height: 0.0, topic: voxel_grid/output, marking: false, clearing: true, expected_update_rate: 0.3}
laser_scan_sensor: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true, expected_update_rate: 0.05}




